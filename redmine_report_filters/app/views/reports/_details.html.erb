<script>
    $('.issues').removeClass('selected');
    $('.report').addClass('selected');
</script>
<% if @statuses.empty? or rows.empty? %>
    <p><i><%=l(:label_no_data)%></i></p>
<% else %>
    <table class="list issue-report">
      <thead><tr>
        <th></th>
        <% for status in @statuses %>
            <th><%=h status.name %></th>
        <% end %>
        <th><strong><%=l(:label_open_issues_plural)%></strong></th>
        <th><strong><%=l(:label_closed_issues_plural)%></strong></th>
        <th><strong><%=l(:label_total)%></strong></th>
      </tr></thead>
      <tbody>
      <% if params[:detail] != 'subcategory' %>
          <% for row in rows %>
              <tr class="<%= cycle("odd", "even") %>">
                <td class="name"><%= link_to h(row.name), aggregate_path(@project, field_name, row) %></td>
                <% for status in @statuses %>
                    <td><%= aggregate_link data, { field_name => row.id, "status_id" => status.id }, aggregate_path(@project, field_name, row, :status_id => status.id) %></td>
                <% end %>
                <td><%= aggregate_link data, { field_name => row.id, "closed" => 0 }, aggregate_path(@project, field_name, row, :status_id => "o") %></td>
                <td><%= aggregate_link data, { field_name => row.id, "closed" => 1 }, aggregate_path(@project, field_name, row, :status_id => "c") %></td>
                <td><%= aggregate_link data, { field_name => row.id }, aggregate_path(@project, field_name, row, :status_id => "*") %></td>
              </tr>
          <% end %>
      <% else %>
          <% for row in rows %>
              <%
                 rs = CustomValue.joins("INNER JOIN issues ON issues.id = custom_values.customized_id INNER JOIN issue_statuses ON issues.status_id=issue_statuses.id").where(
                         :custom_values => {:custom_field_id => IssueCustomField.where(:name=>'Подкатегория').first.id})
                 if @issues.count != 0 && @query_result_issue.present?
                   rs = rs.where(@query_result_issue)
                   rs = rs.where("(#{Issue.table_name}.created_on >='#{session[:date_from].to_s + " 00:00:00"}' AND #{Issue.table_name}.created_on <='#{session[:date_to].to_s + " 23:59:00"}')") if session[:date_to].present? && session[:date_from].present?
                 else
                   rs = rs.where("issues.id=0")
                 end
              %>
              <% open = rs.where(:custom_values=>{:value=>row},
                                 :issue_statuses=>{:is_closed => 0}).count %>
              <% close = rs.where(:custom_values=>{:value=>row},
                                  :issue_statuses=>{:is_closed => 1}).count %>
              <% total = close + open
              %>
              <tr class="<%= cycle("odd", "even") %>">
                <td class="name"><%= link_to row, project_issues_path(@project) %></td>
                <% for status in @statuses %>
                    <% pr = rs.where(:custom_values=>{:value=>row},
                                 :issue_statuses=>{:id => status.id}).count %>
                    <td><% if pr != 0 %>
                          <%= link_to pr, project_issues_path(@project) %>
                      <% else %>
                          -
                      <% end %></td>
                <% end %>
                <td><% if open != 0 %>
                      <%= link_to open, project_issues_path(@project) %>
                  <% else %>
                      -
                  <% end %>
                </td>
                <td><% if close != 0 %>
                      <%= link_to close, project_issues_path(@project) %>
                  <% else %>
                      -
                  <% end %></td>
                <td><% if total != 0 %>
                      <%= link_to total, project_issues_path(@project) %>
                  <% else %>
                      -
                  <% end %></td>
              </tr>
          <% end %>
      <% end %>
      </tbody>
    </table>
<% end
   reset_cycle %>
